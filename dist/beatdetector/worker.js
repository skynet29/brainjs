function getPeaksAtThreshold(e,o,t){console.log("getPeaksAtThreshold",o);const n=[],s=e.length;for(let a=0;a<s;)e[a]>o&&(n.push(a),a+=t/4-1),a++;return n}function countIntervalsBetweenNearbyPeaks(e){console.log("countIntervalsBetweenNearbyPeaks",e);const o=[];return e.forEach((t,n)=>{const s=Math.min(e.length-n,10);for(let a=1;a<s;a++){const s=e[n+a]-t;o.some(e=>e.interval===s&&(e.peaks.push(t),console.log("interval",e),!0))||o.push({interval:s,peaks:[t]})}}),o}function trunc(e){return Math.trunc(10*e)/10}function groupNeighborsByTempo(e,o){console.log("groupNeighborsByTempo",e);const t=[];return e.forEach((e,n)=>{console.log(n,e);let s=60/(e.interval/o);for(console.log("theoreticalTempo",s);s<90;)s*=2;for(;s>160;)s/=2;console.log("theoreticalTempo",s);let a=e.peaks.length,l=!1;t.forEach(o=>{if(o.tempo===s&&(o.score+=e.peaks.length,o.peaks=o.peaks.concat(e.peaks),l=!0),o.tempo>s-.5&&o.tempo<s+.5){const e=(1-2*Math.abs(o.tempo-s))*o.peaks.length;a+=e,o.score+=e}}),l||t.push({tempo:s,score:a,peaks:e.peaks})}),t}function getMaximumValue(e){let o=0;const t=e.length;for(let n=0;n<t;n+=1)e[n]>o&&(o=e[n]);return o}self.onmessage=function(e){console.log("Message received:",e.data);const{channelData:o,sampleRate:t}=e.data,n=guess(o,t);console.log("tempoInfo",n),self.postMessage(n)};const MINUMUM_NUMBER_OF_PEAKS=30;function computeTempoBuckets(e,o){const t=getMaximumValue(e);console.log("maximumValue",t);const n=.3*t;let s=[],a=t-.05*t;if(console.log("threshold",a),t>.25)for(;s.length<MINUMUM_NUMBER_OF_PEAKS&&a>=n;)s=getPeaksAtThreshold(e,a,o),console.log("peaks length",s.length),a-=.05*t;const l=groupNeighborsByTempo(countIntervalsBetweenNearbyPeaks(s),o);return l.sort((e,o)=>o.score-e.score),l}function guess(e,o){const t=computeTempoBuckets(e,o);if(0===t.length)throw new Error("The given channelData does not contain any detectable beats.");const{peaks:n,tempo:s}=t[0],a=Math.round(s),l=60/a;n.sort((e,o)=>e-o);let r=n[0]/o;for(;r>l;)r-=l;return{bpm:a,offset:r,tempo:s}}